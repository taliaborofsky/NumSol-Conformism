#maxs$Tukey = c('a','b','c')
p.b <- ggplot(data=eqData, aes(x=a_stability,y=learningSuccess,fill=a_stability))+geom_violin(adjust=1) + theme_classic() + labs(x=TeX("\nSign of $\\delta_s$"), fill = TeX("$sign of $\\delta_s$"), y = TeX("\\hat{u_1} + \\hat{u_2}"),fontsize=20) + theme(legend.position = "none") + theme(text = element_text(size = 20))
p.b
fn = "LearnSuccess_SignCs.png"
#ggsave("LearnSuccess_SignCs.png", plot = p.b)
ggsave(file.path(figure_folder, fn), plot = p.b)
p.his <- ggplot(data=eqData, aes(x=learningSuccess))+geom_histogram(binwidth=.01) + theme_classic() + theme(text = element_text(size = 20)) + labs(x = "Learning Success")
p.his
fn = "LearnSuccess_his.png"
ggsave(file.path(figure_folder,fn), plot = p.his)
abs_max = max(learningSuccess)
maxs <- eqDataPos_Equal %>% group_by(a_stability ) %>% summarise(learningSuccess=max(learningSuccess) + 0.05 * abs_max, n = length(a_stability))
p.b <- ggplot(data=eqDataPos_Equal, aes(x=a_stability,y=learningSuccess, fill = a_stability))+geom_violin(adjust=1) + theme_classic() + labs(x=TeX("$sign(\\delta_s)$"), fill = TeX("$sign(\\delta_s)$"), y = TeX("\\hat{u_1} + \\hat{u_2}"),fontsize=20)+ geom_text(data=maxs,aes(label=n))
p.b
abs_max = max(learningSuccess)
maxs <- eqDataPos_UnEqual %>% group_by(a_stability ) %>% summarise(learningSuccess=max(learningSuccess) + 0.05 * abs_max, n = length(a_stability))
p.b <- ggplot(data=eqDataPos_UnEqual, aes(x=a_stability,y=learningSuccess, fill = a_stability))+geom_violin(position=position_dodge(1)) + theme_classic() + labs(x=TeX("$sign(\\delta_s)$"), y = TeX("\\hat{u_1} + \\hat{u_2}"),fontsize=20)+ geom_text(data=maxs,aes(label=n)) + ylim(0,1.3)
p.b
p.his <- ggplot(data=eqDataPos_UnEqual, aes(x=learningSuccess))+geom_histogram(binwidth=.01) + theme_classic()
p.his
# still have eqData attached
mu_pos = eqData$mu>=0
eqData$mu_pos = mu_pos
m.mu <- lm(learningSuccess ~K*mu_pos, data=eqData)
summary(m.mu)
stargazer(m.mu, type="text")
c(m.int, m.K, m.mu_pos, m.mu_pos.K) %<-% m.mu$coefficients
# mupos is 1 if > 0, 0 if <=0
mu_nonneg = factor(eqData$mu>=0)
SocLearnMuTable <- table(a_stability, mu_nonneg)
SocLearnMuTable
chisq.test(SocLearnMuTable)
datuse <- data.frame(mu_nonneg, eqData$a_stability)
datuse <- datuse %>% group_by(mu_nonneg, eqData.a_stability) %>% count()
p <- ggplot(datuse, aes(x = mu_nonneg, y = n, fill = eqData.a_stability)) + geom_bar(position="stack",stat="identity") + labs(y="Num Equilibria", fill = TeX("$sign(\\delta_s)$"), x = TeX("$\\mu \\geq 0$")) + theme_classic()+ theme(text = element_text(size = 20)) + scale_fill_manual(TeX("$sign(\\delta_s)$"), values = c("-1" = "pink", "0" = "dark blue", "1" = "light blue"))
p
fn = "MuSocLearnStack.png"
ggsave(file.path(figure_folder,fn), plot = p)
#eqdata already attached
eqData.maxDiff <- eqDataPos %>%
group_by(s,K,D,mu,beta) %>%
summarise(max_diff = max(difference)) %>%
mutate(KD = K*D)
attach(eqData.maxDiff)
m <- lm(max_diff ~ K*D, data=eqData.maxDiff)
summary(m)
stargazer(m, type = "text", covariate.labels = c("K","D", "KD"), dep.var.labels = "Maximum Behavioral Preference")
plotH2 <- ggplot(data = eqData.maxDiff, mapping = aes(x = KD, y = max_diff)) + geom_point(size = 3, shape = 1) + theme_bw()
plotH2 <- plotH2 + labs(x = TeX("$KD$"), y = "Max Behavioral Preference")
plotH2
#mypath = file.path(paste("/Users/taliaborofsky/Documents/Stanford/Research/Feldman/Ecology of Learning/Conformism/Paper_to_Submit_EcoMono2","plotH2.png"))
#ggsave(mypath, plot = plotH2) # still calling it H2 because when I originally named these plots I called this section was hypothesis 2
attach(eqData)
isDiff = difference > 0
m1 <- lm(Weq ~ isDiff*beta)
print(summary(m1))
c(m1.int, m1.isDiff, m1.beta, m1.isDiff.beta) %<-% m1$coefficients
stargazer(m1, type = "text",covariate.labels = c("isDiff=TRUE", "beta", "beta(isDiff=TRUE)"), dep.var.labels = "Mean Pop Fitness")
library(ggplot2)
datUse = eqDataPos %>% mutate(betadiff = beta*difference)
plotH1.LS <- ggplot(data = datUse, mapping = aes(x = difference, y = learningSuccess, color = beta)) + geom_point(size = 3, alpha = 0.5) + theme_bw()+ labs(x = TeX("$|\\hat{u_1} - \\hat{u_2}|$"), y = TeX("$\\hat{u_1} + \\hat{u_2}$"), color = TeX("$\\beta$")) + theme(text = element_text(size = 20))
plotH1.LS
#fn = "Figures/plotH1_LS.png"
#ggsave(file.path(figure_folder,fn), plot = plotH1.LS)
attach(eqData)
isDiff = difference > 0
cor.test(eqData$Weq[!isDiff],eqData$beta[!isDiff], method = "spearman")
set.seed(5)
spearman.ci(eqData$Weq[!isDiff],eqData$beta[!isDiff],nrep=1000,conf.level=0.999)
cor.test(eqData$Weq[isDiff], eqData$beta[isDiff], method = "spearman")
set.seed(5)
spearman.ci(eqData$Weq[isDiff],eqData$beta[isDiff],nrep=1000,conf.level=0.999)
attach(eqData)
isDiff = difference > 0
cor.test(eqData$learningSuccess[!isDiff],eqData$beta[!isDiff], method = "spearman")
cor.test(eqData$learningSuccess[isDiff], eqData$beta[isDiff], method = "spearman")
spearman.ci(eqData$learningSuccess[isDiff], eqData$beta[isDiff],nrep=1000,conf.level=0.999)
eqDataD0 <- eqData %>% filter(D==0)
eqDataD0$mu_pos <- eqDataD0$mu >=0
set.seed(5)
eqDataD0.1 <- eqDataD0 %>% filter(mu_pos==TRUE)
eqDataD0.2 <- eqDataD0 %>% filter(mu_pos==FALSE)
cortest <- cor.test(eqDataD0$C_s, eqDataD0$beta, method="spearman")
cortest
spearman.ci(eqDataD0$C_s, eqDataD0$beta, nrep = 1000, conf.level=0.999)
set.seed(5)
cortest1 <- cor.test( eqDataD0.1$C_s, eqDataD0.1$beta, method = "spearman")
cortest1
spearman.ci(eqDataD0.1$beta, eqDataD0.1$C_s, nrep = 1000, conf.level = 0.999)
set.seed(5)
cortest2 <- cor.test( eqDataD0.2$C_s, eqDataD0.2$beta, method = "spearman")
cortest2
spearman.ci(eqDataD0.2$beta, eqDataD0.2$C_s, nrep = 1000, conf.level = 0.95)
p <- ggplot(data = eqDataD0, aes(x=beta,y=C_s,color=mu_pos )) + geom_jitter() + geom_smooth(method=lm,se=FALSE, fullrange=TRUE) + theme_classic()  + labs(x=TeX("$\\beta$"), y=TeX("$C_s$"), colour = TeX("$\\mu \\geq 0$"),fontsize=20) + scale_color_manual(breaks = c(FALSE, TRUE),values=c("red", "#56B4E9")) + geom_hline(yintercept=0,linetype="dashed", size=0.5)+ theme(text = element_text(size = 20))
p
fn = "D0jitter.png"
ggsave(file.path(figure_folder,fn), plot = p)
eqDataD0_x_pos <- eqDataD0 %>% filter(x_pos_invades==TRUE)
nrow(eqDataD0)
nrow(eqDataD0_x_pos)
max(eqDataD0_x_pos$beta)
# As beta increases, and u1 \neq u2, then conformity and social learning will be less likely to invade
# use variable isDiff
eqDataPos$isDiff = eqDataPos$difference>0
eqData$isDiff = eqData$difference>0
model.y <- glm(data = eqDataPos, y_pos_invades ~ beta*isDiff, family = binomial(link="logit"))
eqDataPos$isDiff = eqDataPos$difference>0
eqData$isDiff = eqData$difference>0
model.y <- glm(data = eqDataPos, y_pos_invades ~ beta*isDiff, family = binomial(link="logit"))
model.y <- glm(data = eqDataPos, int(y_pos_invades) ~ beta*isDiff, family = binomial(link="logit"))
model.y <- glm(data = eqDataPos, as.integer(y_pos_invades) ~ beta*isDiff, family = binomial(link="logit"))
eqDataPos$isDiff = eqDataPos$difference>0
eqData$isDiff = eqData$difference>0
model.y <- glm(data = eqDataPos, as.integer(y_pos_invades) ~ beta*isDiff, family = binomial(link="logit"))
model.x <- glm(data = eqData, x_pos_invades ~ beta*isDiff, family = binomial(link = "logit"))
eqDataPos$isDiff = eqDataPos$difference>0
eqData$isDiff = eqData$difference>0
model.y <- glm(data = eqDataPos, as.integer(y_pos_invades) ~ beta*isDiff, family = binomial(link="logit"))
model.x <- glm(data = eqData, as.integer(x_pos_invades) ~ beta*isDiff, family = binomial(link = "logit"))
stargazer(model.x, type = "text", dep.var.labels = "Increased social learning invades", covariate.labels = c("beta", "isDiff = TRUE", "beta(isDiff=TRUE)"))
lrtest(model.x)
stargazer(model.y, type = "text", dep.var.labels = "Increased conformity invades", covariate.labels = c("beta", "isDiff = TRUE", "beta(isDiff=TRUE)"))
lrtest(model.y)
head(eqDataPos)
model.y <- glm(data = eqDataPos, as.integer(y_pos_invades) ~ beta*as.integer(isDiff), family = binomial(link="logit"))
#maxs$Tukey = c('a','b','c')
eqData$isDiff = eqData$difference>0
p.b <- ggplot(data=eqData, aes(x=factor(x_pos_invades),y=beta,fill=isDiff))+geom_boxplot(adjust=1, scale = "count") + theme_classic() + labs(x="Increased Social Learning Invades", y = TeX("$\\beta$"),fontsize=20)+ theme(text = element_text(size = 20),axis.title.x = element_text(vjust=-0.8))  #+ geom_text(data=maxs,aes(label=Tukey))
p.b <- p.b + scale_fill_discrete(name = "Behavioral Preference", labels = c("no behavioral preference","positive behavioral preference"))
p.b
ggsave(file.path(figure_folder,"BehavPref_boxplot.png"), plot = p.b)
# aov <- aov(beta ~ signC_s*isDiff)
# summary(aov)
#
# aov1 <- aov(beta~ factor(isDiff), subset=signC_s==1)
# summary(aov1)
# TukeyHSD(aov1)
attach(eqDataPos)
isDiff = difference>0
colnames(eqDataPos)
dat = eqDataPos %>% filter(difference>0)
mod <- aov(dat$beta ~ factor(dat$y_pos_invades))
summary(mod)
TukeyHSD(mod)
modsoc <- aov(data=eqDataPos, beta ~ factor(x_pos_invades))
summary(modsoc)
TukeyHSD(modsoc)
aov1 <- aov(beta~ factor(isDiff), subset=signC_s==1)
summary(aov1)
TukeyHSD(aov1)
attach(eqDataPos)
isDiff = difference>0
dat = eqDataPos %>% filter(difference>0)
p.b <- ggplot(data=dat, aes(x=factor(y_pos_invades),y=beta))+geom_boxplot() + theme_classic() + labs(x="Increased Conformity Evolves", y = TeX("$\\beta$"),fontsize=20) + theme(text = element_text(size = 20),axis.title.x = element_text(vjust=-1.1)) #+ geom_text(data=maxs,aes(label=Tukey))
p.b
fn = "BehavPref_boxplot_D.png"
ggsave(file.path(figure_folder,fn), plot = p.b)
p.b <- ggplot(data=dat, aes(x=factor(y_neg_invades),y=beta))+geom_boxplot() + theme_classic() + labs(x="Decreased Conformity Evolves", y = TeX("$\\beta$"),title = TeX("$\\hat{u_1} \\neq \\hat{u_2}$"),fontsize=20) + theme(text = element_text(size = 20),axis.title.x = element_text(vjust=-1.1)) #+ geom_text(data=maxs,aes(label=Tukey))
p.b
fn = "BehavPref_boxplot_pos_diff_Dless.png"
ggsave(file.path(figure_folder,fn), plot = p.b)
p.b <- ggplot(data=eqData %>% filter(difference==0), aes(x=factor(y_neg_invades),y=beta))+geom_boxplot() + theme_classic() + labs(x="Decreased Conformity Evolves", y = TeX("$\\beta$"), title = TeX("$\\hat{u_1} = \\hat{u_2}$"),fontsize=20) + theme(text = element_text(size = 20),axis.title.x = element_text(vjust=-1.1)) #+ geom_text(data=maxs,aes(label=Tukey))
p.b
fn = "BehavPref_boxplot_pos_nodiff_Dless.png"
ggsave(file.path(figure_folder,fn), plot = p.b)
# aov <- aov(beta ~ factor(signC_D)*factor(isDiff))
# summary(aov)
# aov1 <- aov(beta~signC_D)
# TukeyHSD(aov1)
# aov2 <- aov(beta~signC_D, subset=isDiff) #when hu1 \neq hu2
# aov3 <- aov(beta~signC_D, subset=!isDiff) #when hu1 = hu2
# t <- TukeyHSD(aov)
# t$`factor(signC_D):factor(isDiff)`
# plot(t$`factor(signC_D):factor(isDiff)`)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(car)
library(dplyr)
library(aod)
library(ggplot2)
library(latex2exp)
library(olsrr)
library(lmtest)
library(zeallot)
library(ROSE) # for roc curve
library(RVAideMemoire) # library that has spearman.ci function...gets confidence intervals on spearman using bootstrap
figure_folder = "/Users/taliaborofsky/Documents/Stanford/Research/Feldman/Ecology of Learning/Conformism/Paper_to_Submit_EcoMono2/"
#maxs$Tukey = c('a','b','c')
eqData$isDiff = eqData$difference>0
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(car)
library(dplyr)
library(aod)
library(ggplot2)
library(latex2exp)
library(olsrr)
library(lmtest)
library(zeallot)
library(ROSE) # for roc curve
library(RVAideMemoire) # library that has spearman.ci function...gets confidence intervals on spearman using bootstrap
figure_folder = "/Users/taliaborofsky/Documents/Stanford/Research/Feldman/Ecology of Learning/Conformism/Paper_to_Submit_EcoMono2/"
grid <- expand.grid(K = seq(1/2,0.99,length.out=1000),u = seq(0,1,length.out=1000))
f <- function(K,u) (2*K-1)/K -3*u^2 -3*((2*K-1)/K -u)^2 + 2*u^3 + 2*((2*K-1)/K -u)^3
f2 <- function(K,u) (2*K-1)/K - u
grid$filled <- (f(grid$K,grid$u)>=0)
grid$filled[(f2(grid$K,grid$u)<0)|(f2(grid$K,grid$u)>1)] = NA
p<- ggplot(grid) + geom_tile(aes(x=K,y=u,fill=filled))  + theme_classic() + labs(x=TeX("$K$"),y = TeX("$\\hat{u_1}$"))+ theme(legend.position = "none") + scale_fill_brewer(palette="Set1", na.value="white") + theme(text = element_text(size = 20))
p
fn = "D0Unequal_C_D.png"
ggsave(file.path(figure_folder, fn), plot = p)
#red means C_D < 0, turquoise means C_D > 0
knitr::opts_chunk$set(echo = TRUE)
# load the Unique Equilibria
uniqueEquilibria <- read.csv('UniqueEquilibriaDF.csv', as.is=TRUE)
# helped to round D values
uniqueEquilibria$D <-round(uniqueEquilibria$D,digits = 10)
# Adjusting bool strings to actual R bool values
uniqueEquilibria[uniqueEquilibria=="True"]=TRUE
uniqueEquilibria[uniqueEquilibria=="False"]=FALSE
### deal with equilibria for which lambda* = 1
# rename and do rest of changes to eqData
eqData <- uniqueEquilibria
# remove values where s = 0 and D != 0 because we assume an organism can't have the conformist transmission bias trait
# without being able to leran socially
eqData <- eqData %>% filter(!(s==0&D!=0))
# below was in the code for the first draft but we have since determined that it's unnecessary and
# can actually erroneously set cases where beta = 0, D = 0, pc = 0, and K>1/2 as stable
# # fix equilibria in which lambdastar = 1 but actually internally stable
# attach(eqData)
# mask =(beta==0)&(D==0)&(pc==0)&(K>0) # this equilibria might have lambda* = 1, but is actually internally stable
# eqData[mask,]$URstable = 1
# detach(eqData)
# only use equilibria that are internally stable
# no longer necessary because I'm only using equilibria that were arrived at through iteration: eqData <- eqData %>% filter(URstable == 1)
# # (NO LONGER NECESSARY)If C_s is negative when K = 0, then set it to 0
#eqData[(eqData$K==0)&(eqData$C_s<0),]$C_s = 0
# label by the sign of C_s
eqData$signC_s <- factor(sign(eqData$C_s))
# (Fixed. NO LONGER NECESSARY) thre are about 16 places where r says C_s = 0 but it's actually negative
# eqData$signC_s[eqData$signC_s==0] = -1
# label by the sign of C_D
eqData$signC_D <- factor(sign(eqData$C_D))
# label by type of invasion that can happen. In combines the x_pos_invades with x_neg_invades, and the y_pos_invades with y_neg_invades
eqData$a_stability <- 0
eqData$a_stability[eqData$x_pos_invades==TRUE] <- 1
eqData$a_stability[eqData$x_neg_invades==TRUE] <- -1
eqData$a_stability <- factor(eqData$a_stability)
eqData$b_stability <- 0
eqData$b_stability[eqData$y_pos_invades==TRUE] <- 1
eqData$b_stability[eqData$y_neg_invades==TRUE] <- -1
eqData$b_stability <- factor(eqData$b_stability)
# add column for learning success
eqData$learningSuccess = eqData$u1eq + eqData$u2eq # portion of foragers that learn how to find food
# Make separate data frames for whether D \geq 0 or D \leq 0 and for whether or not u1 = u2
eqDataPos = eqData %>% filter(D>=0)
eqDataPos_UnEqual <-  eqDataPos %>% filter(difference > 0)
eqDataPos_Equal = eqDataPos %>% filter(difference==0)
# D < 0
eqDataNeg = eqData %>% filter(D<0)
eqDataNeg_UnEqual = eqDataNeg %>% filter(difference>0)
eqDataNeg_Equal = eqDataNeg %>% filter(difference==0)
#maxs$Tukey = c('a','b','c')
eqData$isDiff = eqData$difference>0
p.b <- ggplot(data=eqData, aes(x=factor(a_stability),y=beta,fill=isDiff))+geom_boxplot(adjust=1, scale = "count") + theme_classic() + labs(x="Increased Social Learning Invades", y = TeX("$\\beta$"),fontsize=20)+ theme(text = element_text(size = 20),axis.title.x = element_text(vjust=-0.8))  #+ geom_text(data=maxs,aes(label=Tukey))
p.b <- p.b + scale_fill_discrete(name = "Behavioral Preference", labels = c("no behavioral preference","positive behavioral preference"))
p.b
ggsave(file.path(figure_folder,"BehavPref_boxplot.png"), plot = p.b)
# aov <- aov(beta ~ signC_s*isDiff)
# summary(aov)
#
# aov1 <- aov(beta~ factor(isDiff), subset=signC_s==1)
# summary(aov1)
# TukeyHSD(aov1)
#maxs$Tukey = c('a','b','c')
eqData$isDiff = eqData$difference>0
p.b <- ggplot(data=eqData, aes(x=factor(x_pos_invades),y=beta,fill=isDiff))+geom_boxplot(adjust=1, scale = "count") + theme_classic() + labs(x="Increased Social Learning Invades", y = TeX("$\\beta$"),fontsize=20)+ theme(text = element_text(size = 20),axis.title.x = element_text(vjust=-0.8))  #+ geom_text(data=maxs,aes(label=Tukey))
p.b <- p.b + scale_fill_discrete(name = "Behavioral Preference", labels = c("no behavioral preference","positive behavioral preference"))
p.b
ggsave(file.path(figure_folder,"BehavPref_boxplot.png"), plot = p.b)
# aov <- aov(beta ~ signC_s*isDiff)
# summary(aov)
#
# aov1 <- aov(beta~ factor(isDiff), subset=signC_s==1)
# summary(aov1)
# TukeyHSD(aov1)
eqDat%>% filter(URstable !=1)
eqData %>% filter(URstable !=1)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(car)
library(dplyr)
library(aod)
library(ggplot2)
library(latex2exp)
library(olsrr)
library(lmtest)
library(zeallot)
library(ROSE) # for roc curve
library(RVAideMemoire) # library that has spearman.ci function...gets confidence intervals on spearman using bootstrap
figure_folder = "/Users/taliaborofsky/Documents/Stanford/Research/Feldman/Ecology of Learning/Conformism/Paper_to_Submit_EcoMono2/"
grid <- expand.grid(K = seq(1/2,0.99,length.out=1000),u = seq(0,1,length.out=1000))
f <- function(K,u) (2*K-1)/K -3*u^2 -3*((2*K-1)/K -u)^2 + 2*u^3 + 2*((2*K-1)/K -u)^3
f2 <- function(K,u) (2*K-1)/K - u
grid$filled <- (f(grid$K,grid$u)>=0)
grid$filled[(f2(grid$K,grid$u)<0)|(f2(grid$K,grid$u)>1)] = NA
p<- ggplot(grid) + geom_tile(aes(x=K,y=u,fill=filled))  + theme_classic() + labs(x=TeX("$K$"),y = TeX("$\\hat{u_1}$"))+ theme(legend.position = "none") + scale_fill_brewer(palette="Set1", na.value="white") + theme(text = element_text(size = 20))
p
fn = "D0Unequal_C_D.png"
ggsave(file.path(figure_folder, fn), plot = p)
#red means C_D < 0, turquoise means C_D > 0
knitr::opts_chunk$set(echo = TRUE)
# load the Unique Equilibria
uniqueEquilibria <- read.csv('UniqueEquilibriaDF.csv', as.is=TRUE)
# helped to round D values
uniqueEquilibria$D <-round(uniqueEquilibria$D,digits = 10)
# Adjusting bool strings to actual R bool values
uniqueEquilibria[uniqueEquilibria=="True"]=TRUE
uniqueEquilibria[uniqueEquilibria=="False"]=FALSE
### deal with equilibria for which lambda* = 1
# rename and do rest of changes to eqData
eqData <- uniqueEquilibria
# remove values where s = 0 and D != 0 because we assume an organism can't have the conformist transmission bias trait
# without being able to leran socially
eqData <- eqData %>% filter(!(s==0&D!=0))
# below was in the code for the first draft but we have since determined that it's unnecessary and
# can actually erroneously set cases where beta = 0, D = 0, pc = 0, and K>1/2 as stable
# # fix equilibria in which lambdastar = 1 but actually internally stable
# attach(eqData)
# mask =(beta==0)&(D==0)&(pc==0)&(K>0) # this equilibria might have lambda* = 1, but is actually internally stable
# eqData[mask,]$URstable = 1
# detach(eqData)
# only use equilibria that are internally stable
# no longer necessary because I'm only using equilibria that were arrived at through iteration: eqData <- eqData %>% filter(URstable == 1)
# # (NO LONGER NECESSARY)If C_s is negative when K = 0, then set it to 0
#eqData[(eqData$K==0)&(eqData$C_s<0),]$C_s = 0
# label by the sign of C_s
eqData$signC_s <- factor(sign(eqData$C_s))
# (Fixed. NO LONGER NECESSARY) thre are about 16 places where r says C_s = 0 but it's actually negative
# eqData$signC_s[eqData$signC_s==0] = -1
# label by the sign of C_D
eqData$signC_D <- factor(sign(eqData$C_D))
# label by type of invasion that can happen. In combines the x_pos_invades with x_neg_invades, and the y_pos_invades with y_neg_invades
eqData$a_stability <- 0
eqData$a_stability[eqData$x_pos_invades==TRUE] <- 1
eqData$a_stability[eqData$x_neg_invades==TRUE] <- -1
eqData$a_stability <- factor(eqData$a_stability)
eqData$b_stability <- 0
eqData$b_stability[eqData$y_pos_invades==TRUE] <- 1
eqData$b_stability[eqData$y_neg_invades==TRUE] <- -1
eqData$b_stability <- factor(eqData$b_stability)
# add column for learning success
eqData$learningSuccess = eqData$u1eq + eqData$u2eq # portion of foragers that learn how to find food
# Make separate data frames for whether D \geq 0 or D \leq 0 and for whether or not u1 = u2
eqDataPos = eqData %>% filter(D>=0)
eqDataPos_UnEqual <-  eqDataPos %>% filter(difference > 0)
eqDataPos_Equal = eqDataPos %>% filter(difference==0)
# D < 0
eqDataNeg = eqData %>% filter(D<0)
eqDataNeg_UnEqual = eqDataNeg %>% filter(difference>0)
eqDataNeg_Equal = eqDataNeg %>% filter(difference==0)
print('Anti-conformity and W')
# want for D <= 0, so create eqData_nonNeg
eqData_nonNeg = eqData %>% filter(D <= 0)
corWeq <- cor.test(eqData_nonNeg$D, eqData_nonNeg$Weq, method = "spearman"); print(corWeq)
print('Anti-conformity and learning success')
corlearn <- cor.test(eqData_nonNeg$D, eqData_nonNeg$learningSuccess, method = "spearman"); print(corlearn)
set.seed(5)
spearman.ci(eqDataNeg$D, eqDataNeg$learningSuccess, nrep = 1000, conf.level = 0.985) # use conf.level = 0.995 because 0.999
#mpos <- lm(data=eqDataPos, Weq ~ D)
#summary(mpos)
cor.test(eqDataPos$Weq, eqDataPos$D, method = "spearman")
set.seed(5)
spearman.ci(eqDataPos$D, eqDataPos$Weq, nrep = 1000, conf.level = 0.999)
cor.test(eqDataPos$learningSuccess, eqDataPos$D, method = "spearman")
set.seed(5)
spearman.ci(eqDataPos$D, eqDataPos$learningSuccess, nrep = 1000, conf.level = 0.999)
m1 <- lm(learningSuccess ~ K, data = eqData)
summary(m1)
ctest <- cor.test(eqData$K, eqData$learningSuccess, method = "spearman")
ctest
set.seed(5)
spearman.ci(eqData$K, eqData$learningSuccess, nrep = 1000, conf.level = 0.999)
attach(eqData)
aov <- aov(learningSuccess~signC_s)
summary(aov)
plot(aov)
# require(onewaytests)
# # heteroscedastic and non-normal so use Kruskal Wallis test
# kt <- kruskal.test(learningSuccess~signC_s,data=eqData)
# posthoc <- pairwise.wilcox.test(learningSuccess, signC_s, p.adjust.method='none')
# posthoc
t <- TukeyHSD(aov)
plot(t)
#maxs$Tukey = c('a','b','c')
p.b <- ggplot(data=eqData, aes(x=a_stability,y=learningSuccess,fill=a_stability))+geom_violin(adjust=1) + theme_classic() + labs(x=TeX("\nSign of $\\delta_s$"), fill = TeX("$sign of $\\delta_s$"), y = TeX("\\hat{u_1} + \\hat{u_2}"),fontsize=20) + theme(legend.position = "none") + theme(text = element_text(size = 20))
p.b
fn = "LearnSuccess_SignCs.png"
#ggsave("LearnSuccess_SignCs.png", plot = p.b)
ggsave(file.path(figure_folder, fn), plot = p.b)
p.his <- ggplot(data=eqData, aes(x=learningSuccess))+geom_histogram(binwidth=.01) + theme_classic() + theme(text = element_text(size = 20)) + labs(x = "Learning Success")
p.his
fn = "LearnSuccess_his.png"
ggsave(file.path(figure_folder,fn), plot = p.his)
abs_max = max(learningSuccess)
maxs <- eqDataPos_Equal %>% group_by(a_stability ) %>% summarise(learningSuccess=max(learningSuccess) + 0.05 * abs_max, n = length(a_stability))
p.b <- ggplot(data=eqDataPos_Equal, aes(x=a_stability,y=learningSuccess, fill = a_stability))+geom_violin(adjust=1) + theme_classic() + labs(x=TeX("$sign(\\delta_s)$"), fill = TeX("$sign(\\delta_s)$"), y = TeX("\\hat{u_1} + \\hat{u_2}"),fontsize=20)+ geom_text(data=maxs,aes(label=n))
p.b
abs_max = max(learningSuccess)
maxs <- eqDataPos_UnEqual %>% group_by(a_stability ) %>% summarise(learningSuccess=max(learningSuccess) + 0.05 * abs_max, n = length(a_stability))
p.b <- ggplot(data=eqDataPos_UnEqual, aes(x=a_stability,y=learningSuccess, fill = a_stability))+geom_violin(position=position_dodge(1)) + theme_classic() + labs(x=TeX("$sign(\\delta_s)$"), y = TeX("\\hat{u_1} + \\hat{u_2}"),fontsize=20)+ geom_text(data=maxs,aes(label=n)) + ylim(0,1.3)
p.b
p.his <- ggplot(data=eqDataPos_UnEqual, aes(x=learningSuccess))+geom_histogram(binwidth=.01) + theme_classic()
p.his
# still have eqData attached
mu_pos = eqData$mu>=0
eqData$mu_pos = mu_pos
m.mu <- lm(learningSuccess ~K*mu_pos, data=eqData)
summary(m.mu)
stargazer(m.mu, type="text")
c(m.int, m.K, m.mu_pos, m.mu_pos.K) %<-% m.mu$coefficients
# mupos is 1 if > 0, 0 if <=0
mu_nonneg = factor(eqData$mu>=0)
SocLearnMuTable <- table(a_stability, mu_nonneg)
SocLearnMuTable
chisq.test(SocLearnMuTable)
datuse <- data.frame(mu_nonneg, eqData$a_stability)
datuse <- datuse %>% group_by(mu_nonneg, eqData.a_stability) %>% count()
p <- ggplot(datuse, aes(x = mu_nonneg, y = n, fill = eqData.a_stability)) + geom_bar(position="stack",stat="identity") + labs(y="Num Equilibria", fill = TeX("$sign(\\delta_s)$"), x = TeX("$\\mu \\geq 0$")) + theme_classic()+ theme(text = element_text(size = 20)) + scale_fill_manual(TeX("$sign(\\delta_s)$"), values = c("-1" = "pink", "0" = "dark blue", "1" = "light blue"))
p
fn = "MuSocLearnStack.png"
ggsave(file.path(figure_folder,fn), plot = p)
#eqdata already attached
eqData.maxDiff <- eqDataPos %>%
group_by(s,K,D,mu,beta) %>%
summarise(max_diff = max(difference)) %>%
mutate(KD = K*D)
attach(eqData.maxDiff)
m <- lm(max_diff ~ K*D, data=eqData.maxDiff)
summary(m)
stargazer(m, type = "text", covariate.labels = c("K","D", "KD"), dep.var.labels = "Maximum Behavioral Preference")
plotH2 <- ggplot(data = eqData.maxDiff, mapping = aes(x = KD, y = max_diff)) + geom_point(size = 3, shape = 1) + theme_bw()
plotH2 <- plotH2 + labs(x = TeX("$KD$"), y = "Max Behavioral Preference")
plotH2
#mypath = file.path(paste("/Users/taliaborofsky/Documents/Stanford/Research/Feldman/Ecology of Learning/Conformism/Paper_to_Submit_EcoMono2","plotH2.png"))
#ggsave(mypath, plot = plotH2) # still calling it H2 because when I originally named these plots I called this section was hypothesis 2
attach(eqData)
isDiff = difference > 0
m1 <- lm(Weq ~ isDiff*beta)
print(summary(m1))
c(m1.int, m1.isDiff, m1.beta, m1.isDiff.beta) %<-% m1$coefficients
stargazer(m1, type = "text",covariate.labels = c("isDiff=TRUE", "beta", "beta(isDiff=TRUE)"), dep.var.labels = "Mean Pop Fitness")
library(ggplot2)
datUse = eqDataPos %>% mutate(betadiff = beta*difference)
plotH1.LS <- ggplot(data = datUse, mapping = aes(x = difference, y = learningSuccess, color = beta)) + geom_point(size = 3, alpha = 0.5) + theme_bw()+ labs(x = TeX("$|\\hat{u_1} - \\hat{u_2}|$"), y = TeX("$\\hat{u_1} + \\hat{u_2}$"), color = TeX("$\\beta$")) + theme(text = element_text(size = 20))
plotH1.LS
#fn = "Figures/plotH1_LS.png"
#ggsave(file.path(figure_folder,fn), plot = plotH1.LS)
m2 <- lm(learningSuccess ~ isDiff*beta)
c(m2.int, m2.isDiff, m2.beta, m2.isDiff.beta) %<-% m2$coefficients
stargazer(m2, type = "text",covariate.labels = c("isDiff=TRUE", "beta", "beta(isDiff=TRUE)"), dep.var.labels = "Learning Success")
plot.H1.W <- ggplot(data = datUse, mapping = aes(x = difference, y = Weq, color = beta)) + geom_point(size=3, alpha = 0.5) + theme_bw() + labs(x = TeX("$|\\hat{u_1} - \\hat{u_2}|$"), y = TeX("$\\hat{W}$"), color = TeX("$\\beta$"))
plot.H1.W
#ggsave("Figures/plotH1_W.png", plot = plot.H1.W)
attach(eqData)
isDiff = difference > 0
cor.test(eqData$Weq[!isDiff],eqData$beta[!isDiff], method = "spearman")
set.seed(5)
spearman.ci(eqData$Weq[!isDiff],eqData$beta[!isDiff],nrep=1000,conf.level=0.999)
cor.test(eqData$Weq[isDiff], eqData$beta[isDiff], method = "spearman")
set.seed(5)
spearman.ci(eqData$Weq[isDiff],eqData$beta[isDiff],nrep=1000,conf.level=0.999)
attach(eqData)
isDiff = difference > 0
cor.test(eqData$learningSuccess[!isDiff],eqData$beta[!isDiff], method = "spearman")
cor.test(eqData$learningSuccess[isDiff], eqData$beta[isDiff], method = "spearman")
spearman.ci(eqData$learningSuccess[isDiff], eqData$beta[isDiff],nrep=1000,conf.level=0.999)
m <- lm(data = eqData, difference ~ beta)
stargazer(m, type = "text", dep.var.labels = "behavioral preference") # linear regression doesn't fit
cortest <- cor.test(eqData$beta, eqData$difference, method = "spearman")
cortest
set.seed(5)
spearman.ci(eqData$beta, eqData$difference, nrep = 1000, conf.level = 0.999)
eqDataD0 <- eqData %>% filter(D==0)
eqDataD0$mu_pos <- eqDataD0$mu >=0
set.seed(5)
eqDataD0.1 <- eqDataD0 %>% filter(mu_pos==TRUE)
eqDataD0.2 <- eqDataD0 %>% filter(mu_pos==FALSE)
cortest <- cor.test(eqDataD0$C_s, eqDataD0$beta, method="spearman")
cortest
spearman.ci(eqDataD0$C_s, eqDataD0$beta, nrep = 1000, conf.level=0.999)
set.seed(5)
cortest1 <- cor.test( eqDataD0.1$C_s, eqDataD0.1$beta, method = "spearman")
cortest1
spearman.ci(eqDataD0.1$beta, eqDataD0.1$C_s, nrep = 1000, conf.level = 0.999)
set.seed(5)
cortest2 <- cor.test( eqDataD0.2$C_s, eqDataD0.2$beta, method = "spearman")
cortest2
spearman.ci(eqDataD0.2$beta, eqDataD0.2$C_s, nrep = 1000, conf.level = 0.95)
p <- ggplot(data = eqDataD0, aes(x=beta,y=C_s,color=mu_pos )) + geom_jitter() + geom_smooth(method=lm,se=FALSE, fullrange=TRUE) + theme_classic()  + labs(x=TeX("$\\beta$"), y=TeX("$C_s$"), colour = TeX("$\\mu \\geq 0$"),fontsize=20) + scale_color_manual(breaks = c(FALSE, TRUE),values=c("red", "#56B4E9")) + geom_hline(yintercept=0,linetype="dashed", size=0.5)+ theme(text = element_text(size = 20))
p
fn = "D0jitter.png"
ggsave(file.path(figure_folder,fn), plot = p)
eqDataD0_x_pos <- eqDataD0 %>% filter(x_pos_invades==TRUE)
nrow(eqDataD0)
nrow(eqDataD0_x_pos)
max(eqDataD0_x_pos$beta)
# As beta increases, and u1 \neq u2, then conformity and social learning will be less likely to invade
# use variable isDiff
eqDataPos$isDiff = eqDataPos$difference>0
eqData$isDiff = eqData$difference>0
model.y <- glm(data = eqDataPos, y_pos_invades ~ beta*isDiff, family = binomial(link="logit"))
